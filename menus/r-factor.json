{
  "context-menu": {
    "atom-text-editor": [
      [
          {
            "label": "R-Factor: Add className",
            "command": "r-factor:add-classname"
          },
          {
            "label": "R-Factor: Connect",
            "command": "r-factor:connect"
          },
          {
            "label": "R-Factor: Connect mapDispatchToProps",
            "command": "r-factor:connect-map-dispatch-to-props"
          },
          {
            "label": "R-Factor: Connect mapStateToProps",
            "command": "r-factor:connect-map-state-to-props"
          },
          {
            "label": "R-Factor: Connect mergeProps",
            "command": "r-factor:connect-merge-props"
          },
          {
            "label": "R-Factor: Convert SVG to component",
            "command": "r-factor:convert-svg-to-component"
          },
          {
            "label": "R-Factor: Convert to arrow component",
            "command": "r-factor:convert-to-arrow-component"
          },
          {
            "label": "R-Factor: Convert to class component",
            "command": "r-factor:convert-to-class-component"
          },
          {
            "label": "R-Factor: Convert to function component",
            "command": "r-factor:convert-to-function-component"
          },
          {
            "label": "R-Factor: Disconnect",
            "command": "r-factor:disconnect"
          },
          {
            "label": "R-Factor: Disconnect mapDispatchToProps",
            "command": "r-factor:disconnect-map-dispatch-to-props"
          },
          {
            "label": "R-Factor: Disconnect mapStateToProps",
            "command": "r-factor:disconnect-map-state-to-props"
          },
          {
            "label": "R-Factor: Disconnect mergeProps",
            "command": "r-factor:disconnect-merge-props"
          },
          {
            "label": "R-Factor: Generate propTypes",
            "command": "r-factor:generate-prop-types"
          },
          {
            "label": "R-Factor: Move defaultProps out of class",
            "command": "r-factor:move-default-props-out-of-class"
          },
          {
            "label": "R-Factor: Move defaultProps to class",
            "command": "r-factor:move-default-props-to-class"
          },
          {
            "label": "R-Factor: Move propTypes out of class",
            "command": "r-factor:move-prop-types-out-of-class"
          },
          {
            "label": "R-Factor: Move propTypes to class",
            "command": "r-factor:move-prop-types-to-class"
          },
          {
            "label": "R-Factor: Enter license key",
            "command": "r-factor:enter-license-key"
          },
          {
            "label": "R-Factor: Sort attributes in objects",
            "command": "r-factor:sort-attributes"
          },
          {
            "label": "R-Factor: Sort imports",
            "command": "r-factor:sort-imports"
          },
          {
            "label": "R-Factor: Toggle component type",
            "command": "r-factor:toggle-component-type"
          },
          {
            "label": "R-Factor: Toggle withRouter HOC",
            "command": "r-factor:toggle-with-router-hoc"
          }
        ]
    ]
  },
  "menu": [
    {
    "label": "Packages",
    "submenu": [
      {
        "label": "R-Factor",
        "submenu": [
            {
              "label": "Add className",
              "command": "r-factor:add-classname"
            },
            {
              "label": "Connect",
              "command": "r-factor:connect"
            },
            {
              "label": "Connect mapDispatchToProps",
              "command": "r-factor:connect-map-dispatch-to-props"
            },
            {
              "label": "Connect mapStateToProps",
              "command": "r-factor:connect-map-state-to-props"
            },
            {
              "label": "Connect mergeProps",
              "command": "r-factor:connect-merge-props"
            },
            {
              "label": "R-Factor: Convert SVG to component",
              "command": "r-factor:convert-svg-to-component"
            },
            {
              "label": "Convert to arrow component",
              "command": "r-factor:convert-to-arrow-component"
            },
            {
              "label": "Convert to class component",
              "command": "r-factor:convert-to-class-component"
            },
            {
              "label": "Convert to function component",
              "command": "r-factor:convert-to-function-component"
            },
            {
              "label": "Disconnect",
              "command": "r-factor:disconnect"
            },
            {
              "label": "Disconnect mapDispatchToProps",
              "command": "r-factor:disconnect-map-dispatch-to-props"
            },
            {
              "label": "Disconnect mapStateToProps",
              "command": "r-factor:disconnect-map-state-to-props"
            },
            {
              "label": "Disconnect mergeProps",
              "command": "r-factor:disconnect-merge-props"
            },
            {
              "label": "Generate propTypes",
              "command": "r-factor:generate-prop-types"
            },
            {
              "label": "Move defaultProps out of class",
              "command": "r-factor:move-default-props-out-of-class"
            },
            {
              "label": "Move defaultProps to class",
              "command": "r-factor:move-default-props-to-class"
            },
            {
              "label": "Move propTypes out of class",
              "command": "r-factor:move-prop-types-out-of-class"
            },
            {
              "label": "Move propTypes to class",
              "command": "r-factor:move-prop-types-to-class"
            },
            {
              "label": "Enter license key",
              "command": "r-factor:enter-license-key"
            },
            {
              "label": "Sort attributes in objects",
              "command": "r-factor:sort-attributes"
            },
            {
              "label": "Sort imports",
              "command": "r-factor:sort-imports"
            },
            {
              "label": "Toggle component type",
              "command": "r-factor:toggle-component-type"
            },
            {
              "label": "Toggle withRouter HOC",
              "command": "r-factor:toggle-with-router-hoc"
            }
          ]
        }
      ]
    }
  ]
}
